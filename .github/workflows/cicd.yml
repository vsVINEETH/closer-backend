name: Node.js CI/CD

on:
  push:
    branches:
      - main
      - subbranch
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout Source
      uses: actions/checkout@v4

    - name: Create .env File (For Build)
      run: |
        echo "PORT=${{ secrets.PORT }}" >> .env
        echo "ORIGIN=${{ secrets.ORIGIN }}" >> .env
        echo "SESSION_SECRET=${{ secrets.SESSION_SECRET }}" >> .env
        echo "NODE_ENV=${{ secrets.NODE_ENV }}" >> .env
        echo "SMTP_KEY=${{ secrets.SMTP_KEY }}" >> .env
        echo "SMTP_ID=${{ secrets.SMTP_ID }}" >> .env
        echo "MONGO_URI_ATLAS=${{ secrets.MONGO_URI_ATLAS }}" >> .env
        echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
        echo "JWT_REFRESH_TOKEN=${{ secrets.JWT_REFRESH_TOKEN }}" >> .env
        echo "ADMIN_ID=${{ secrets.ADMIN_ID }}" >> .env
        echo "ADMIN_PASS=${{ secrets.ADMIN_PASS }}" >> .env
        echo "EMP_ID=${{ secrets.EMP_ID }}" >> .env
        echo "EMP_PASS=${{ secrets.EMP_PASS }}" >> .env
        echo "S3_KEY=${{ secrets.S3_KEY }}" >> .env
        echo "S3_SECRET=${{ secrets.S3_SECRET }}" >> .env
        echo "AWS_S3_KEY=${{ secrets.AWS_S3_KEY }}" >> .env
        echo "AWS_S3_SECRET=${{ secrets.AWS_S3_SECRET }}" >> .env
        echo "PAYMENT_KEY_ID=${{ secrets.PAYMENT_KEY_ID }}" >> .env
        echo "PAYMENT_KEY_SECRET=${{ secrets.PAYMENT_KEY_SECRET }}" >> .env
        echo "CLIENT_BASE_URL=${{ secrets.CLIENT_BASE_URL }}" >> .env
        echo "OPENAI_KEY=${{ secrets.OPENAI_KEY }}" >> .env
        echo "TUNNEL_PASS=${{ secrets.TUNNEL_PASS }}" >> .env

    - name: Login to docker hub
      run: docker login -u ${{ secrets.DOCKER_ID }} -p ${{ secrets.DOCKER_KEY }}
    
    - name: Build Docker Image
      run: docker build --build-arg ENV_FILE=.env -t vineeth1927/closer-server .
    
    - name: Publish Image to docker hub
      run: docker push vineeth1927/closer-server:latest
  
  deploy:
    needs: build
    runs-on: self-hosted
    steps:
    - name: Create .env File (For Deployment)
      run: |
            echo "PORT=${{ secrets.PORT }}" > .env
            echo "ORIGIN=${{ secrets.ORIGIN }}" >> .env
            echo "SESSION_SECRET=${{ secrets.SESSION_SECRET }}" >> .env
            echo "NODE_ENV=${{ secrets.NODE_ENV }}" >> .env
            echo "SMTP_KEY=${{ secrets.SMTP_KEY }}" >> .env
            echo "SMTP_ID=${{ secrets.SMTP_ID }}" >> .env
            echo "MONGO_URI_ATLAS=${{ secrets.MONGO_URI_ATLAS }}" >> .env
            echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
            echo "JWT_REFRESH_TOKEN=${{ secrets.JWT_REFRESH_TOKEN }}" >> .env
            echo "ADMIN_ID=${{ secrets.ADMIN_ID }}" >> .env
            echo "ADMIN_PASS=${{ secrets.ADMIN_PASS }}" >> .env
            echo "EMP_ID=${{ secrets.EMP_ID }}" >> .env
            echo "EMP_PASS=${{ secrets.EMP_PASS }}" >> .env
            echo "S3_KEY=${{ secrets.S3_KEY }}" >> .env
            echo "S3_SECRET=${{ secrets.S3_SECRET }}" >> .env
            echo "AWS_S3_KEY=${{ secrets.AWS_S3_KEY }}" >> .env
            echo "AWS_S3_SECRET=${{ secrets.AWS_S3_SECRET }}" >> .env
            echo "PAYMENT_KEY_ID=${{ secrets.PAYMENT_KEY_ID }}" >> .env
            echo "PAYMENT_KEY_SECRET=${{ secrets.PAYMENT_KEY_SECRET }}" >> .env
            echo "CLIENT_BASE_URL=${{ secrets.CLIENT_BASE_URL }}" >> .env
            echo "OPENAI_KEY=${{ secrets.OPENAI_KEY }}" >> .env
            echo "TUNNEL_PASS=${{ secrets.TUNNEL_PASS }}" >> .env
    - name: Pull image from docker hub
      run: sudo docker pull vineeth1927/closer-server:latest

    - name: Delete old container
      run: sudo docker rm -f nodejs-app-container || true

    - name: Run Docker Container
      run: docker run -d -p 5000:5000 --name nodejs-app-container --env-file .env vineeth1927/closer-server
